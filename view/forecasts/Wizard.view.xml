<mvc:View
	controllerName="view.forecasts.Wizard"
	xmlns="sap.m"
  xmlns:l="sap.ui.layout"
  xmlns:f="sap.ui.layout.form"
	xmlns:core="sap.ui.core"
	xmlns:mvc="sap.ui.core.mvc">
	<Page
		id="idWizardPage"
		title="New forecast Wizard"
		enableScrolling="false"
		showNavButton="false">
		<customHeader>
			<Toolbar>
				<Button
					id="idCancelButton"
					text="Cancel"
					press="onCancelPress" />
				<Button
					id="idHomeButton"
					icon="sap-icon://home"
					visible="false"
					enabled="false"
					press="onHomePress" />
				<ToolbarSpacer />
				<Title
					id="idWizardTitle"
					text="" />
				<ToolbarSpacer />
				<Text
					text="" />
			</Toolbar>
		</customHeader>
		<footer>
			<!-- Toolbar + Cancel button -->
			<Toolbar>
				<Button
					id="idBackButton"
					text="Back"
					press="onBackPress"
					enabled="false" />
				<ToolbarSpacer />
				<Button
					id="idNextButton"
					text="Next"
					type="Emphasized"
					press="onNextPress" />
			</Toolbar>
		</footer>
	  <NavContainer
	    id="idForecastWizardNavContainer">
	    <pages>

				<!-- Page 1 -->
	      <Page
	    		id="idNewForecastWizardPage1"
	    		title="New forecast Wizard"
	    		enableScrolling="false"
	    		showHeader="false">
	    		<content>
	          <l:Grid
	            defaultSpan="L12 M12 S12"
	            width="auto"
	            class="sapUiSmallMargin">
	            <l:content>
	              <Title
	                text="Step 1 - Name your forecast"
	                level="H1"
	                titleStyle="H1" />
								<Text text="All good forecasts need a name. And this one's no different!
									Note also, that upon completing this wizard and running your forecast,
									it will be placed in the folder identified below so you can find it later..." />
	              <f:SimpleForm
	                id="idNewForecastNameForm"
	                maxContainerCols="2"
	                editable="true"
	                layout="ResponsiveGridLayout"
	                labelSpanL="3"
	                labelSpanM="3"
	                emptySpanL="4"
	                emptySpanM="4"
	                columnsL="1"
	                columnsM="1"
	                class="editableForm">
	                <f:content>
	                  <Label
	                    text="Folder">
	    								<layoutData>
	    									<l:GridData
	    										span="L3 M3 S12" />
	    								</layoutData>
	    							</Label>
	                  <Input
	                    id="idNewForecastFolderInput"
	                    enabled="false" >
	    								<layoutData>
	    									<l:GridData
	    										span="L9 M9 S12" />
	    								</layoutData>
	    							</Input>
	    							<Label
	                    text="Forecast name"
	    								required="true">
	    								<layoutData>
	    									<l:GridData
	    										span="L3 M3 S12" />
	    								</layoutData>
	    							</Label>
	                  <Input
	                    id="idNewForecastNameInput"
											placeholder="My new forecast"
											maxLength="80">
	    								<layoutData>
	    									<l:GridData
	    										span="L9 M9 S12" />
	    								</layoutData>
	    							</Input>
	                </f:content>
	              </f:SimpleForm>
	            </l:content>
	          </l:Grid>
	    		</content>
	      </Page>

	      <!-- Page 2 -->
	      <Page
	    		id="idNewForecastWizardPage2"
	    		title="Select data set"
	    		enableScrolling="false"
	    		showHeader="false">
	    		<content>
	          <l:Grid
	            defaultSpan="L12 M12 S12"
	            width="auto"
	            class="sapUiSmallMargin">
	            <l:content>
	              <Title
	                text="Step 2 - Select a data set"
	                level="H1"
	                titleStyle="H1" />
								<Text text="Pick one of your previously configured data sets.
									This will be used to supply 'training data' to the forecast. Additionally, we're
									going to pick a field in the data set to forecast. This is the field for which
									we're going to predict future results. You can also elect to use up to three
									of the data set's other fields as variables. If you don't have any data sets
									you'll need to create one." />
	            </l:content>
	          </l:Grid>
	    			<TileContainer
	    				id="idDatasetsTileContainer"
	    				allowAdd="false"
	            tiles="{
								path: 'dataset>/DataSets',
								parameters : {
									expand : 'DataSource'
								},
								sorter : [{
									path : 'DataSource/name',
									descending : false,
									group : true
								}],
								filters : [{
									path : 'endda',
									operator : 'EQ',
									value1: '9999-12-31'
								}, {
									path : 'created_by',
									operator : 'EQ',
									value1: 'TESTUSER'
								}]
							}">
	            <StandardTile
								icon="sap-icon://{dataset>DataSource/icon}"
								title="{dataset>name}"
								info="{dataset>DataSource/name}"
	              press="onDataSetTilePress"/>
	          </TileContainer>
	    		</content>
	      </Page>

				<!-- Page 3 -->
	      <Page
	    		id="idNewForecastWizardPage3"
	    		title="Forecast field"
	    		enableScrolling="false"
	    		showHeader="false">
	    		<content>
	          <l:Grid
	            defaultSpan="L12 M12 S12"
	            width="auto"
	            class="sapUiSmallMargin">
	            <l:content>
	              <Title
	                text="Step 3 - Select forecast field"
	                level="H1"
	                titleStyle="H1" />
								<Text text="Great, thanks for that. Could you now identify the field
									you'd like to forecast (this is the field for which you'll be creating
									future values for). Note, all Text based fields have been removed from
									this listing." />
								<!-- Column selection -->
								<core:Fragment
									id="idForecastWizardForecastFragment"
									fragmentName="view.forecasts.ForecastFields"
									type="XML" />
	            </l:content>
	          </l:Grid>
					</content>
	      </Page>

				<!-- Page 4 -->
	      <Page
	    		id="idNewForecastWizardPage4"
	    		title="Variable fields"
	    		enableScrolling="false"
	    		showHeader="false">
	    		<content>
	          <l:Grid
	            defaultSpan="L12 M12 S12"
	            width="auto"
	            class="sapUiSmallMargin">
	            <l:content>
	              <Title
	                text="Step 4 - Select forecast variable fields"
	                level="H1"
	                titleStyle="H1" />
								<Text text="Now that you have selected your forecast field, you're also able
									to indicate which fields should act as 'variables'. Variables are considered
									to have an effect on the forecast, and thus will be used to make your forecast
									more accurate. Please note, that if a selected variable has no correlation to the
									forecast field, selecting it as a variable may adversely affect your forecast." />
								<!-- Column selection -->
								<core:Fragment
									id="idForecastWizardVariablesFragment"
									fragmentName="view.forecasts.VariableFields"
									type="XML" />
	            </l:content>
	          </l:Grid>
					</content>
	      </Page>

				<!-- Page 5 -->
	      <Page
	    		id="idNewForecastWizardPage5"
	    		title="Frequency and effective date"
	    		enableScrolling="false"
	    		showHeader="false">
	    		<content>
	          <l:Grid
	            defaultSpan="L12 M12 S12"
	            width="auto"
	            class="sapUiSmallMargin">
	            <l:content>
	              <Title
	                text="Step 5 - set your frequency and effective date"
	                level="H1"
	                titleStyle="H1" />
								<Text text="The data set you've supplied has training data from {
										path : 'forecast>begda',
										formatter : 'util.DateFormatter.ddMMyyyy'
									} to {
										path : 'forecast>endda',
										formatter : 'util.DateFormatter.ddMMyyyy'
									} so you can pick an effective date of {
										path : 'forecast>endda',
										formatter : 'util.DateFormatter.add1Day'
									} or earlier.
									Additionally, the length of your horizon dictates how much training data your
									forecast requires - if there isn't enough, I'll let you know." />
								<f:SimpleForm
	                id="idNewForecastParamsForm"
	                maxContainerCols="2"
	                editable="true"
	                layout="ResponsiveGridLayout"
	                labelSpanL="3"
	                labelSpanM="3"
	                emptySpanL="4"
	                emptySpanM="4"
	                columnsL="1"
	                columnsM="1"
	                class="editableForm">
	                <f:content>
	                  <Label
	                    text="Effective date" />
										<DatePicker
											id="idToDatePicker"
											displayFormat="dd/MM/yyyy"
											change="onToDateChange"/>

										<Label
											text="Forecast horizon" />
										<Input
											id="idHorizonInput"
											type="Number"
											description="days"
											change="onHorizonChange"/>

										<Label
											text="Start of training period"/>
										<DatePicker
											id="idFromDatePicker"
											displayFormat="dd/MM/yyyy"
											change="onFromDateChange" />

										<Label
											text="Validation period" />
										<Input
											id="idValidationInput"
											type="Number"
											description="days"
											change="onValidationChange"/>

										<Label text="" />
										<CheckBox
											id="idSmoothingCheckBox"
											text="Apply smoothing" />
	                </f:content>
	              </f:SimpleForm>
	            </l:content>
	          </l:Grid>
					</content>
	      </Page>

				<!-- Page 6 -->
				<MessagePage
					id="idNewForecastWizardPage6"
					icon="sap-icon://FontAwesome/check"
					text="All done! The future is told... check out your forecast using the link below."
					showHeader="false">
					<customDescription>
						<Link
							id="idDoneLink"
							text="Go to forecast"
							press="onDonePress" />
					</customDescription>
				</MessagePage>
	    </pages>
	  </NavContainer>
	</Page>
</mvc:View>
